import RPi.GPIO as gpio
import time
import serial
import os, time
from pyfingerprint.pyfingerprint import PyFingerprint


gpio.setwarnings(False)
gpio.setmode(gpio.BOARD)

enrol=29
delet=31
inc=33
dec=35


HIGH=1
LOW=0
positionNumber=0



##BASE_URL = "http://emblocation.wizzie.online/notify.php?"

gpio.setup(enrol, gpio.IN, pull_up_down=gpio.PUD_UP)
gpio.setup(delet, gpio.IN, pull_up_down=gpio.PUD_UP)
gpio.setup(inc, gpio.IN, pull_up_down=gpio.PUD_UP)
gpio.setup(dec, gpio.IN, pull_up_down=gpio.PUD_UP)

try:
    f = PyFingerprint('/dev/ttyAMA0', 57600, 0xFFFFFFFF, 0x00000000)

    if ( f.verifyPassword() == False ):
        raise ValueError('The given fingerprint sensor password is wrong!')

except Exception as e:
    print('Exception message: ' + str(e))
    exit(1)


def enrollFinger():
    print("Enrolling Finger")
    print('Waiting for finger...')
    while ( f.readImage() == False ):
        pass
    f.convertImage(0x01)
    result = f.searchTemplate()
    positionNumber = result[0]
    if ( positionNumber >= 0 ):
        print('Template already exists at position #' + str(positionNumber))
        time.sleep(2)
        return
    print('Remove finger...')
    time.sleep(2)
    print('Waiting for same finger again...')
    while ( f.readImage() == False ):
        pass
    f.convertImage(0x02)
    if ( f.compareCharacteristics() == 0 ):
        print ("Fingers do not match")
        time.sleep(2)
        return
    f.createTemplate()
    positionNumber = f.storeTemplate()
    print('Finger enrolled successfully!')
    print('New template position #' + str(positionNumber))
    time.sleep(2)

def searchFinger():
    try:
        print('Waiting for finger...')
        time.sleep(3)
        while( f.readImage() == False ):
            #pass
            time.sleep(.5)
            return
        f.convertImage(0x01)
        result = f.searchTemplate()
        positionNumber = result[0]
        accuracyScore = result[1]
        if positionNumber == -1 :
            print('No match found!')
            time.sleep(2)
            return
        else:
            print('Found template at position #' + str(positionNumber))
            time.sleep(2)

##            hom = 'http://emblocation.wizzie.online/notify.php?'+'lat='+str(lat_in_degrees)+'&&lng='+ str(long_in_degrees) +'&&spd='+str(spd_in_kmphr)#+'&&id=user1'
##            http = urllib3.PoolManager()
##            resp = http.request('GET', hom)
##            print(resp.status)
##            print(hom)
##    
##            print("sent")


    except Exception as e:
        print('Operation failed!')
        print('Exception message: ' + str(e))
        exit(1)

def deleteFinger():
    positionNumber = 0
    count=0
    while gpio.input(enrol) == True:   # here enrol key means ok
        if gpio.input(inc) == False:
            count=count+1
            if count>1000:
                count=1000
            time.sleep(0.2)
        elif gpio.input(dec) == False:
            count=count-1
            if count<0:
                count=0
            time.sleep(0.2)
    positionNumber=count
    if f.deleteTemplate(positionNumber) == True :
        print('Template deleted!')
        time.sleep(2)
while 1:
    
##    lcdcmd(1)
##    lcdprint("Place Finger")
    if gpio.input(enrol) == 0:
        enrollFinger()
    elif gpio.input(delet) == 0:
        while gpio.input(delet) == 0:
            time.sleep(0.1)
        deleteFinger()

    else:
        searchFinger()
        

